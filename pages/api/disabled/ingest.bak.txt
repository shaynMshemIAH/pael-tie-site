// pages/api/ingest.ts
import type { NextApiRequest, NextApiResponse } from 'next';
// before
// import { readingSchema } from '@/lib/telemetry/schema';
// import { upsertReading } from '@/lib/telemetry/store';
// after
import { readingSchema } from '../../lib/telemetry/schema';
import { upsertReading } from '../../lib/telemetry/store';
import { safeAuth } from '../../lib/safeAuth';

const TOKEN = process.env.SITE_TOKEN_SECRET ?? "";

export default function handler(req: NextApiRequest, res: NextApiResponse) {
  try {
    if (req.method !== 'POST') {
      return res.status(405).json({ error: 'Method Not Allowed' });
    }

    if (!safeAuth(req, TOKEN)) {
      return res.status(401).json({ error: 'Unauthorized' });
    }

    const parsed = readingSchema.parse(req.body);
    upsertReading(parsed);
    res.status(200).json({ ok: true });
  } catch (e: any) {
    res.status(400).json({ ok: false, error: e.errors ?? String(e) });
  }
}
